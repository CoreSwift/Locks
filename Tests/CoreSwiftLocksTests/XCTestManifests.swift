#if !canImport(ObjectiveC)
import XCTest

extension CPPStdLockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CPPStdLockTests = [
        ("testBasicLocking", testBasicLocking),
        ("testPerformance", testPerformance),
    ]
}

extension FakeLockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FakeLockTests = [
        ("testLock", testLock),
    ]
}

extension LockableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LockableTests = [
        ("testRun_MultipleLocks", testRun_MultipleLocks),
        ("testRun_Recursive", testRun_Recursive),
        ("testRun_ReturnValue", testRun_ReturnValue),
        ("testRun_UsesLock", testRun_UsesLock),
    ]
}

extension NSLockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NSLockTests = [
        ("testBasicLocking", testBasicLocking),
        ("testPerformance", testPerformance),
    ]
}

extension NSRecursiveLockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NSRecursiveLockTests = [
        ("testBasicLocking", testBasicLocking),
        ("testPerformance", testPerformance),
        ("testRecursiveLocking", testRecursiveLocking),
    ]
}

extension PThreadLockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PThreadLockTests = [
        ("testBasicLocking", testBasicLocking),
        ("testPerformance", testPerformance),
    ]
}

extension RecursiveCPPStdLockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RecursiveCPPStdLockTests = [
        ("testBasicLocking", testBasicLocking),
        ("testPerformance", testPerformance),
        ("testRecursiveLocking", testRecursiveLocking),
    ]
}

extension RecursivePTthreadLockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RecursivePTthreadLockTests = [
        ("testBasicLocking", testBasicLocking),
        ("testPerformance", testPerformance),
        ("testRecursiveLocking", testRecursiveLocking),
    ]
}

extension UnfairLockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnfairLockTests = [
        ("testBasicLocking", testBasicLocking),
        ("testPerformance", testPerformance),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CPPStdLockTests.__allTests__CPPStdLockTests),
        testCase(FakeLockTests.__allTests__FakeLockTests),
        testCase(LockableTests.__allTests__LockableTests),
        testCase(NSLockTests.__allTests__NSLockTests),
        testCase(NSRecursiveLockTests.__allTests__NSRecursiveLockTests),
        testCase(PThreadLockTests.__allTests__PThreadLockTests),
        testCase(RecursiveCPPStdLockTests.__allTests__RecursiveCPPStdLockTests),
        testCase(RecursivePTthreadLockTests.__allTests__RecursivePTthreadLockTests),
        testCase(UnfairLockTests.__allTests__UnfairLockTests),
    ]
}
#endif
